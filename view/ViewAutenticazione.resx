<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="LoginImageBox.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>